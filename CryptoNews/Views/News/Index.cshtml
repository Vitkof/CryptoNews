@using CryptoNews.HtmlHelpers
@model CryptoNews.Models.ViewModels.NewsListWithPaginator

@{
    ViewData["Title"] = "All News";
}

<p>
    <a asp-controller="News" asp-action="Aggregate">Aggregate</a>
</p>


<h1>All News</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<div class="row">
    @foreach (var item in Model.NewsPerPages)
    {
        await Html.RenderPartialAsync("PreviewNews", item);
    }
</div>

<div id="paginat-line">
    <div>
        @Html.CreatePaginator(Model.PageInfo, i => Url.Action("Index", new
        { pageNumber = i }))
    </div>

    <div id="concretNum" width="90">
        <span class="pages">&nbsp; Number &nbsp;</span>
        <input type="text" id="page" class="page" />
        <input type="hidden" id="max-page" value="" />
        <img src="img/s_ev.gif" id="concretA"
                onmouseover="this.style.cursor='pointer';"
                style="cursor: pointer; padding-bottom: 1px;" />
    </div>
</div>


<script type="module">
    const pageNum = @Model.PageInfo.PageNumber;

    var prevBtn = document.getElementById("prev");
    if (pageNum == 1) {
        prevBtn.style.color = "lightgray";
    }

    prevBtn.addEventListener("click", function (event) {
        if (pageNum > 1) {
            let num = page - 1;
            location.search = `?pageNumber=${num}`;
        }
    });

    var nextBtn = document.getElementById("next");
    if (pageNum == @Model.PageInfo.CountPages) {
        nextBtn.style.color = "lightgray";
    }

    nextBtn.addEventListener("click", function (event) {
        if (pageNum < @Model.PageInfo.CountPages) {
            let num = page + 1;
            location.search = `?pageNumber=${num}`;
        }
    });

    var concretArrow = document.getElementById("concretA");
    concretArrow.addEventListener("click", function (event) {
        const page = parseInt(document.getElementById("page").value);
        if ((page <= @Model.PageInfo.CountPages)
            && (0 < page))
        {
            location.search = `?pageNumber=${page}`;
        }
        else {
            alert('The page number cannot be greater than ' + @Model.PageInfo.CountPages + ' and less 1.');
        }
    })
</script>
    